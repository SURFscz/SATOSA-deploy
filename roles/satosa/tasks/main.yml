- name: Create project directory
  file: path={{ satosa_project_dir }} state=directory mode=0755

- name: fetch SATOSA from {{ satosa_repo_url }}, version {{ satosa_repo_version }}
  git:
    repo: "{{ satosa_repo_url }}"
    dest: "{{ satosa_src_dir }}"
    version: "{{ satosa_repo_version }}"
    accept_hostkey: yes
    force: yes

- name: install SATOSA from {{ satosa_src_dir }} to {{ satosa_env_dir }}
  pip:
    name: "{{ satosa_src_dir }}"
    virtualenv: "{{ satosa_env_dir }}"
    virtualenv_python: python3
    executable: pip3

- name: Create SATOSA  proxy_conf configuration
  template: src=proxy_conf.yaml.j2
            dest="{{ satosa_env_dir }}/proxy_conf.yaml"
  become_method: sudo

- name: Copy internal_attributes.yaml definition
  copy: src=internal_attributes.yaml
        dest="{{ satosa_env_dir }}/internal_attributes.yaml"

- name: Create backends directory
  file: path="{{ satosa_env_dir }}/plugins/backends" state=directory mode=0755

- name: Create saml2_backend.yaml definition
  template: src=saml2_backend.yaml.j2
        dest="{{ satosa_env_dir }}/plugins/backends/saml2_backend.yaml"

- name: Create frontends directory
  file: path="{{ satosa_env_dir }}/plugins/frontends" state=directory mode=0755

- name: Create var logging directory
  file: path="{{ satosa_env_dir }}/var" state=directory mode=0755

- name: Create certs directory
  file: path="{{ satosa_env_dir }}/certs" state=directory mode=0755

- name: Copy certs
  copy: src={{ item }}
        dest="{{ satosa_env_dir }}/certs/{{ item }}"
  with_items:
    - backend.crt
    - backend.key
    - frontend.crt
    - frontend.key

- name: Create keys directory
  file: path="{{ satosa_env_dir }}/keys" state=directory mode=0755

- name: Copy satosa private key
  copy: src=satosa.pem
        dest="{{ satosa_env_dir }}/keys/satosa.pem"

- name: Create saml2_frontend.yaml definition
  template: src=saml2_frontend.yaml.j2
        dest="{{ satosa_env_dir }}/plugins/frontends/saml2_frontend.yaml"

- name: Create oidc_frontend.yaml definition
  template: src=oidc_frontend.yaml.j2
        dest="{{ satosa_env_dir }}/plugins/frontends/oidc_frontend.yaml"

- name: Create micro_services directory
  file: path="{{ satosa_env_dir }}/plugins/micro_services" state=directory mode=0755

- name: Create custom_logging_services.yaml definition
  template: src=custom_logging_service.yaml.j2
        dest="{{ satosa_env_dir }}/plugins/micro_services/custom_logging_service.yaml"
  
- name: Create consent.yaml definition
  template: src=consent.yaml.j2
        dest="{{ satosa_env_dir }}/plugins/micro_services/consent.yaml"

- name: Create MongoDB database satosa with collection clients
  shell: mongo satosa --eval "db.createCollection('clients')"

- name: Create SATOSA systemd service
  template: src=satosa.service.j2
            dest="{{ satosa_env_dir }}/satosa.service"
  become_method: sudo

- name: Copy to satosa.service in /etc/systemd/system
# systemd/ctl can not enable symlinked services :(
#- name: Create symlink to satosa.service in /etc/systemd/system
# https://github.com/systemd/systemd/issues/3010
#  file: src="{{ satosa_env_dir }}/satosa.service" dest=/etc/systemd/system/satosa.service state=link
  copy: src="{{ satosa_env_dir }}/satosa.service" dest=/etc/systemd/system/satosa.service
  become_method: sudo

- name: restart SATOSA
  service: name=satosa state=restarted enabled=yes
  become_method: sudo
